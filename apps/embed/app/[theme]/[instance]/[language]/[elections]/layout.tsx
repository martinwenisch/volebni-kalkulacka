import type { Metadata } from "next";
import { notFound } from "next/navigation";
import { PropsWithChildren } from "react";
import { z } from "zod";
import { CalculatorGroupProvider } from "~/providers/calculatorGroupProvider";
import { calculatorGroupDataSchema } from "~/types/calculatorGroup";

export const metadata: Metadata = {
  title: "Create Turborepo",
  description: "Generated by create turbo",
};

export default async function Layout({
  children,
  params,
}: PropsWithChildren<{
  params: {
    theme: string;
    instance: string;
    language: string;
    elections: string;
  };
}>) {
  const response = await fetch(
    `https://volebnakalkulacka.sk/data/instance/${params.instance}/${params.elections}/calculator-group.json`
  );

  if (response.status !== 200) {
    return notFound();
  }

  try {
    const data = calculatorGroupDataSchema.parse(await response.json());

    return (
      <CalculatorGroupProvider data={data}>{children}</CalculatorGroupProvider>
    );
  } catch (error) {
    if (error instanceof z.ZodError) {
      console.error(error.errors);
    }

    return notFound();
  }
}
