import type { Metadata } from "next";
import { PropsWithChildren } from "react";
import { promises as fs } from "fs";
import { ThemeProvider } from "~/providers/themeProvider";

export const metadata: Metadata = {
  title: "Create Turborepo",
  description: "Generated by create turbo",
};

export default async function Layout({
  children,
  params,
}: PropsWithChildren<{
  params: { theme: string };
}>) {
  let themeCss = null;

  // Try to dynamically import the CSS file based on the theme parameter
  try {
    themeCss = await fs.readFile(
      process.cwd() + `/src/themes/${params.theme}.css`,
      "utf8"
    );
  } catch (error) {
    // If the theme doesn't exist, use the default theme
    themeCss = await fs.readFile(
      process.cwd() + `/src/themes/cool.css`,
      "utf8"
    );
  }

  const themeData = {
    name: params.theme,
  };

  return (
    <>
      {themeCss && <style>{themeCss}</style>}
      <ThemeProvider data={themeData}>{children}</ThemeProvider>
    </>
  );
}
